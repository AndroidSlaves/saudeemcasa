apply plugin: 'com.android.application'
apply plugin: "jacoco"

jacoco {
    toolVersion = "0.7.1.201405082137"
}
task jacocoTestReportAndroidTest(type: JacocoReport, dependsOn: "connectedAndroidTest") {
    def coverageSourceDirs = [
            'src/main/java/api/',
            'src/main/java/mds/gpp/saudeemcasa'

    ]
    group = "Reporting"
    description = "Generates Jacoco coverage reports"
    reports {
        csv.enabled false
        xml{
            enabled = true
            destination "${buildDir}/reports/jacoco/jacoco.xml"
        }
        html{
            enabled true
            destination "${buildDir}/jacocoHtml"
        }
    }
    classDirectories = fileTree(
            dir: 'build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Activity*.*',
                       '**/*Fragment*.*'
            ]
    )
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)

    if (project.hasProperty('coverageFiles')) {
        // convert the comma separated string to an array to create an aggregate report from
        // multiple coverage.ec files
        def coverageFilesArray = coverageFiles.split(',')
        executionData = files(coverageFilesArray)
    }
    else {
        executionData = files('build/outputs/code-coverage/connected/coverage.ec')
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'

        exclude 'META-INF/LICENSE-FIREBASE.txt'

    }

    buildTypes {

        defaultConfig {
            applicationId "com.example.iolane.googlemapteste"
            minSdkVersion 19
            targetSdkVersion 23
            versionCode 1
            versionName "1.0"
            // to solve ERRO _non-zero exit value 2_
            // Enabling multidex support.
            multiDexEnabled = true
        }

        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // to solve ERRO _non-zero exit value 2_
    dexOptions {
        preDexLibraries = false
        incremental true
        javaMaxHeapSize "4g"
    }

    // to solve ERRO _non-zero exit value 2_
    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = ['--multi-dex']
            } else {
                dx.additionalParameters += '--multi-dex'
            }
        }
    }
}

dependencies {
    compile files('src/main/java/Libs/httpclient-4.5.1.jar')
    compile files('src/main/java/Libs/httpcore-4.4.3.jar')
    compile files('src/main/java/Libs/httpmime-4.5.1.jar')
    compile files('src/main/java/Libs/httpclient-cache-4.5.1.jar')
    testCompile 'junit:junit:4.12'
    compile files('src/main/java/Libs/google-api-client-1.4.1-beta.jar')
    compile files('src/main/java/Libs/commons-logging-1.1.2.jar')

    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile 'junit:junit:4.12'
    // App's dependencies, including test

    // Testing-only dependencies
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'com.android.support.test:runner:0.2'
    androidTestCompile 'com.android.support.test:rules:0.2'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'

    compile 'com.android.support:multidex:1.0.1'

    //Google Maps
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.google.android.gms:play-services-maps:8.3.0'
    compile 'com.google.android.support:wearable:1.3.0'
    compile 'com.google.android.gms:play-services:8.3.0'

    //Firebase API
    compile 'com.firebase:firebase-client-android:2.5.2+'

}

