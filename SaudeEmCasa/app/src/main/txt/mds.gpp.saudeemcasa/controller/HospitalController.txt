/**
 * Class HospitalController creates hospital, list of hospitals, arrange these
 * hospitals into a list, and organize this list by distance between user, and
 * hospital localization, provided by latitude and longitude.
 */
Class: HospitalController

    // Create hospital used to populate HospitalList
    private static Hospital hospital

    // Creates an arraylist to populate this list with a collection of hospitals
    private static List<Hospital> hospitalList = new ArrayList<Hospital>()

    // Attribute hospitalDao used to get hospitals objects in database
    private static HospitalDao hospitalDao

    // Attribute context is related to the screen that user should be.
    private static Context context

    /*
     * androidId is an string information unique for each mobile phone.
     * We get this information directly from mobile phone.
     */
    private String androidId

    // Evoques class HospitalController based in context of Android.
    private HospitalController(Context context)

    /*
     * This method where created to define where the controller must act.
     * Example: if we use the HospitalController on some Activity, it must be
     * necessary to pass as parameter of method, the Activity where controller
     * act.
     */
    public static HospitalController getInstance(Context context)

    // Method that set hospital, used to create a list of hospitals.
    public void setHospital( Hospital hospital )


    // Method that get information about a single hospital.
    public Hospital getHospital()


    // Method that get a list of hospitals. This list must have 15 hospitals.
    public static List<Hospital> getAllHospitals()


    /*
     * Starts the application being inside the if for the first usage
     * and the else for the times after that.
     * Receives the response from server, take objects out of json and add to
     * database.
     */
    public void initControllerHospital()

    /*
     * This method set the distance between user and hospital.
     * We use the latitude and longitude of user and hospital, then we store
     * the distance in a List, and organize this list from smallest to biggest
     * distance.
     */
    public boolean setDistance(Context context, ArrayList<Hospital> list)


    /*
     * Request the rating for the 15 first hospitals so that it can be shown
     * at the HospitalList.
     */
    public void requestRating()


    // Method that set androidId for an single hospital.
    public void setAndroidId(String androidId)

    // Get the androidId information.
    public String getAndroidId()


    /**
     * This class implements methods used to compare distances values and store
     * this into a list.
     */
    Class: DistanceComparator

        /*
         * Method that compare two distances. The comparation show what distance
         * is biggest.
         */
        public int compare(Stablishment stablishment1, Stablishment stablishment2)


    /*
     * Method used to update the rating about an hospital. This rating is
     * interesting to user, that helps to decide what hospital has better
     * service.
     */
    public String updateRate(int rate,String androidId,String hospitalId ) throws ConnectionErrorException
