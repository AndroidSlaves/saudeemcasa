/*****************************
 * Class name: DrugstoreController (.java)
 *
 * Purpose: This class control the Drugstore's actions.
 *****************************/
 
VARIABLES

*instance: this variable typed DrugStoreController, access a Drugstore instaciated

*drugStore: this variable typed DrugStore, access the Drugstore atributes

*drugStoreList: this is a List<DrugStore>, receive all drugstores

*context: receive the drugstore in the context

*drugStoreDao: used to access a drugstore in database

*androidId: receive the android ID  from the user

********************************************************

FUNCTIONS
    
*DrugStoreController(Context context): Construct the class.
    @param context: activity context where this method was called.

*getInstance(Context context): Return the unique instance of DrugstoreController active in the
    project.
    @param context: activity context where this method was called.
    @return The unique instance of DrugstoreController.

*setDrugStore( DrugStore drugStore ): Set the selected drugstore
    @param drugStore: the selected drugstore on the list of drugstores.

*getDrugstore(): Get the selected drugstore
    @return the previously selected and stored drugstore.

*getAllDrugstores(): Give the list of the nearest drugstores to be show to the user in a list.
    @return the list of the nearest drugstores.

*initControllerDrugstore(): Method that is first initiated when the application is opened.
    It connects to the server and the database on first use or just get the data from the database
    for usage.
    @throws IOException there maybe a failure in the conversion on the treatment of the response
    from the server.

*setDistance(Context context,ArrayList<DrugStore> list): set distance based on the coordenates for
    each drugstore and then sort the list. The context access the activity where this is being
    executed, the list get a list of drugstores and the boolean is a indicator for tests
    @throws JSONHelper there maybe a failure in the JSON access.

*requestRating(): Request the rating for the 15 first drugstores so that it can be shown. 15 was
    choosen because shows more elegance
    @throws ConnectionErrorException there maybe a failure communicating with the server.
    @param context: the activity where this is being called.
    @param list:the list of drugstores that need the distance to be set.
    @return a boolean indicator for testing

*setAndroidId(String androidId): Saves the unique identifier of the android user.
    @param androidId: Identifier of the android user of this session.

*getAndroidId(): Gets the unique identifier of the android user.
    @returns the Identifier of the android user of this session.

*public static class DistanceComparator implements Comparator<Stablishment>: Creates object that
    will determine how the comparation is done for setDistante function sort.

*compare(Stablishment stablishment1, Stablishment stablishment2): Use responseHandler created to
    request the requested through a URL. Return which stablishment has the gratter distance.
    @param stablishment1: A stablishment to be compared.
    @param stablishment2: A stablishment to be compared.
    @return which stablishment has the grater distance.

*updateRate(int rate,String androidId,String drugstoreId ): Save or update rate from user on server
     database. Parametres "rate" float value received from user input, "androidId" string value that
     represents the unique android id and "drugstoreId" int value that represents the stablishment
     unique id. Return response from http connection.
     @param rate: float value received from user input.
     @param androidId: string value that represents the unique android id.
     @param drugstoreId: int value that represents the stablishment unique id.
     @return response from server.
     @throws ConnectionErrorException there maybe a failure when connecting to the server.
